<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kogel.Cacheing.Test</name>
    </assembly>
    <members>
        <member name="T:Kogel.Cacheing.Test.Controllers.ValuesController">
            <summary>
            测试缓存
            </summary>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.Get(System.String)">
            <summary>
            获取string类型缓存
            </summary>
            <param name="cacheKey">缓存键</param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.Set(System.String,System.String)">
            <summary>
            设置string类型缓存
            </summary>
            <param name="cacheKey">缓存键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.HashGet(System.String,System.String)">
            <summary>
            获取hash类型缓存
            </summary>
            <param name="cacheKey"></param>
            <param name="dataKey"></param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.HashSet(System.String,System.String,System.String)">
            <summary>
            设置hash类型缓存
            </summary>
            <param name="cacheKey"></param>
            <param name="dataKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.HashGetAll(System.String)">
            <summary>
            获取键下所有缓存
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.Mutex(System.String)">
            <summary>
            互斥锁
            </summary>
            <param name="cacheKey">缓存键</param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.StringIncrement(System.String)">
            <summary>
            自增
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.StringDecrement(System.String)">
            <summary>
            自减
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.PublishSubscribe">
            <summary>
            发布订阅
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Controllers.ValuesController.Publish(System.String)">
            <summary>
            发布一条消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kogel.Cacheing.Test.Swagger.SwaggerBuilderExtensions.UseSwaggers(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="apiName"></param>
        </member>
        <member name="M:Kogel.Cacheing.Test.Swagger.SwaggerBuilderExtensions.AddSwaggerGens(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="apiName"></param>
            <param name="pathArr"></param>
        </member>
        <member name="T:Kogel.Cacheing.Test.Swagger.SwaggerBuilderExtensions.ApiVersions">
            <summary>
            Api接口版本 自定義
            </summary>
        </member>
        <member name="F:Kogel.Cacheing.Test.Swagger.SwaggerBuilderExtensions.ApiVersions.V1">
            <summary>
            V1 版本
            </summary>
        </member>
    </members>
</doc>
